async function onPageLoad(){"true"===await Promise.race([sleep(3e3).then((()=>"timeout")),retrieveSettingFromBackgroundPage("hideGoogleOpenWithKamiButton")])?console.debug("Kami: button hidden"):injectButton()}function injectButton(){const e=document.querySelector("#docs-presence-container");if(!e)return void console.warn("Kami: failed to find presence container");const t=createOpenWithKamiLinkEl();!!e.insertAdjacentElement("afterend",t)||console.warn("Kami: failed inserting open link")}function createOpenWithKamiLinkEl(){const e=document.createElement("a");e.ariaLabel=e.title,e.href="#",e.onclick=openWithKami,e.id="open-with-kami",e.ariaLabel="Open with Kami",e.dataset.tooltip=e.ariaLabel;const t=document.createElement("img");t.src="https://web.kamihq.com"+"/web/images/openwith.svg",t.classList.add("open-with-icon"),e.append(t);const o=document.createElement("img");o.src=`${"https://web.kamihq.com"}/web/images/kami_widekerning.svg`,o.classList.add("logo","logo-large"),e.append(o);const n=document.createElement("img");return n.src=`${"https://web.kamihq.com"}/web/images/kami_shorthand.svg`,n.classList.add("logo","logo-small"),e.append(n),e}function openWithKami(){const e=googleFileId();if(!e)return void console.warn("Kami: no file id");let t={id:e,action:"open",from:from()};const o=googleAuthuser();o&&(t.authuser=o);const n=new URL("https://web.kamihq.com");n.pathname="/web/viewer.html",n.searchParams.set("state",JSON.stringify(t)),window.open(n.toString(),"_blank")}function googleFileId(){const e=document.location.pathname.match(/\/d\/([^\/]+)/);return e&&e[1]}function googleAuthuser(){const e=document.querySelector("#docs-drive-logo");if(!e)return;const t=e.parentNode;return new URL(t.href).searchParams.get("authuser")}function from(){return document.location.href.startsWith("https://docs.google.com/document/")?"google-docs":document.location.href.startsWith("https://docs.google.com/presentation/")?"google-slides":document.location.href.startsWith("https://docs.google.com/spreadsheets/")?"google-sheets":void 0}function sleep(e){return new Promise((t=>{setTimeout(t,e)}))}async function retrieveSettingFromBackgroundPage(e){return new Promise((t=>{chrome.runtime.sendMessage(chrome.runtime.id,{action:"retrieve-setting",setting:e},(e=>{t(e.value)}))}))}onPageLoad();